generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int     @id @default(autoincrement())
  up_id      String  @unique // รหัสจาก UP Account (เช่น sub จาก OAuth)
  first_name String? // ชื่อ (ดึงจาก givenName หรือ displayName)
  last_name  String? // นามสกุล (ดึงจาก surname)
  email      String  @unique

  title          String? // เช่น นักศึกษา, อาจารย์
  prefix         String? // เช่น นาย, นาง, ดร.
  jobTitle       String? // ตำแหน่งงาน
  mobilePhone    String? // เบอร์โทรศัพท์มือถือ
  officeLocation String? // สถานที่ทำงาน
  displayName    String? // ชื่อเต็ม
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt
  equipments     Equipment[] @relation("UserEquipment") // เพิ่มฟิลด์นี้เพื่อระบุความสัมพันธ์
}

model Equipment {
  equipment_id    Int             @id @default(autoincrement())
  name            String
  serialNumber    String          @unique
  category        String
  description     String
  total           Int
  status          EquipmentStatus @default(AVAILABLE)
  unit            String
  storageLocation String
  state           String
  createdAt       DateTime        @default(now())
  ownerId         Int
  owner           User          @relation("UserEquipment", fields: [ownerId], references: [id])
}

enum EquipmentStatus {
  AVAILABLE
  UNAVAILABLE
}
